name: Deploy to Server

on:
  push:
    branches: 
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      run : |
        docker compose build --force-recreate
        docker compose push

    - name: Transfer docker-compose.yml to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_KEY }}
        port: ${{ secrets.SSH_PORT }}
        source: "./docker-compose.yml"
        target: "/media/server/WareHouse/docker-containers/golang_microservices/"
      
    - name: SSH into Server and Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          cd /media/server/WareHouse/docker-containers/golang_microservices

          # Check if the network exists
          if ! docker network inspect golang-microservices >/dev/null 2>&1; then
            echo "Creating Docker network golang-microservices"
            docker network create golang-microservices
          else
            echo "Docker network golang-microservices already exists"
          fi

          docker compose pull
          docker compose up -d

    